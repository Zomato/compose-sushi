@file:OptIn(ExperimentalSushiApi::class)

package com.zomato.sushi.compose.foundation

import androidx.compose.material3.ColorScheme
import androidx.compose.material3.lightColorScheme
import com.zomato.sushi.compose.atoms.color.asColorSpec

fun sushiLightColorScheme(
    materialColorScheme: ColorScheme = lightColorScheme(),
    themeColorScheme: SushiColorScheme.ThemeColorScheme = SushiColorScheme.ThemeColorScheme(
        v050 = SushiRed050.asColorSpec(),
        v100 = SushiRed100.asColorSpec(),
        v200 = SushiRed200.asColorSpec(),
        v300 = SushiRed300.asColorSpec(),
        v400 = SushiRed400.asColorSpec(),
        v500 = SushiRed500.asColorSpec(),
        v600 = SushiRed600.asColorSpec(),
        v700 = SushiRed700.asColorSpec(),
        v800 = SushiRed800.asColorSpec(),
        v900 = SushiRed900.asColorSpec(),
        accentColor = SushiRed500.asColorSpec(),
    ),
    grey: SushiColorScheme.GreyColorScheme = SushiColorScheme.GreyColorScheme(),
    red: SushiColorScheme.RedColorScheme = SushiColorScheme.RedColorScheme(),
    green: SushiColorScheme.GreenColorScheme = SushiColorScheme.GreenColorScheme(),
    blue: SushiColorScheme.BlueColorScheme = SushiColorScheme.BlueColorScheme(),
    yellow: SushiColorScheme.YellowColorScheme = SushiColorScheme.YellowColorScheme(),
    purple: SushiColorScheme.PurpleColorScheme = SushiColorScheme.PurpleColorScheme(),
    indigo: SushiColorScheme.IndigoColorScheme = SushiColorScheme.IndigoColorScheme(),
    brown: SushiColorScheme.BrownColorScheme = SushiColorScheme.BrownColorScheme(),
    cider: SushiColorScheme.CiderColorScheme = SushiColorScheme.CiderColorScheme(),
    teal: SushiColorScheme.TealColorScheme = SushiColorScheme.TealColorScheme(),
    orange: SushiColorScheme.OrangeColorScheme = SushiColorScheme.OrangeColorScheme(),
    pink: SushiColorScheme.PinkColorScheme = SushiColorScheme.PinkColorScheme(),
    lime: SushiColorScheme.LimeColorScheme = SushiColorScheme.LimeColorScheme(),
    corn: SushiColorScheme.CornColorScheme = SushiColorScheme.CornColorScheme(),
    avacado: SushiColorScheme.AvacadoColorScheme = SushiColorScheme.AvacadoColorScheme(),
    gold: SushiColorScheme.GoldColorScheme = SushiColorScheme.GoldColorScheme(),
    onion: SushiColorScheme.OnionColorScheme = SushiColorScheme.OnionColorScheme(),
    charcoal: SushiColorScheme.CharcoalColorScheme = SushiColorScheme.CharcoalColorScheme(),
    honey: SushiColorScheme.HoneyColorScheme = SushiColorScheme.HoneyColorScheme(),
    tangerine: SushiColorScheme.TangerineColorScheme = SushiColorScheme.TangerineColorScheme(),
    slate: SushiColorScheme.SlateColorScheme = SushiColorScheme.SlateColorScheme(),
    rating: SushiColorScheme.RatingColorScheme = SushiColorScheme.RatingColorScheme(),
    textColorScheme: SushiColorScheme.TextColorScheme = SushiColorScheme.TextColorScheme(
        default = SushiBlack.asColorSpec(),
        primary = SushiGrey900.asColorSpec(),
        secondary = SushiGrey700.asColorSpec(),
        tertiary = SushiGrey600.asColorSpec(),
        quaternary = SushiGrey500.asColorSpec(),
        disabled = SushiGrey400.asColorSpec(),
        inverse = SushiWhite.asColorSpec(),
        brand = themeColorScheme.v500,
        brandOnlyLight = themeColorScheme.v500,  // textBrand
        offer = SushiBlue500.asColorSpec(),
        success = SushiGreen500.asColorSpec(),
        warning = SushiYellow500.asColorSpec(),
        error = SushiOrange600.asColorSpec(),
        accentRed = SushiRed500.asColorSpec(),
        accentRedIntense = SushiRed700.asColorSpec(),
        accentOrange = SushiOrange500.asColorSpec(),
        accentOrangeIntense = SushiOrange800.asColorSpec(),
        accentGreen = SushiGreen500.asColorSpec(),
        accentGreenIntense = SushiGreen800.asColorSpec(),
        accentBlue = SushiBlue500.asColorSpec(),
        accentBlueIntense = SushiBlue800.asColorSpec(),
        accentPurple = SushiPurple500.asColorSpec(),
        accentPurpleIntense = SushiPurple800.asColorSpec(),
        accentYellow = SushiYellow600.asColorSpec(),
        accentYellowIntense = SushiYellow800.asColorSpec(),
        accentTeal = SushiTeal500.asColorSpec(),
        accentTealIntense = SushiTeal700.asColorSpec(),
        accentCider = SushiCider500.asColorSpec(),
        accentCiderIntense = SushiCider700.asColorSpec(),
        accentBrown = SushiBrown500.asColorSpec(),
        accentBrownIntense = SushiBrown700.asColorSpec(),
        // todox: Fix with actual values, after defaults are merged in View sushi.
        light = SushiWhite.asColorSpec(),
        accentPink = SushiWhite.asColorSpec(),
        discover = SushiWhite.asColorSpec(),
    ),
    iconColorScheme: SushiColorScheme.IconColorScheme = SushiColorScheme.IconColorScheme(
        default = SushiBlack.asColorSpec(),
        primary = SushiGrey900.asColorSpec(),
        secondary = SushiGrey700.asColorSpec(),
        tertiary = SushiGrey600.asColorSpec(),
        quaternary = SushiGrey500.asColorSpec(),
        offer = SushiBlue500.asColorSpec(),
        warning = SushiYellow500.asColorSpec(),
        error = SushiOrange600.asColorSpec(),
        success = SushiGreen500.asColorSpec(),
        inverse = SushiWhite.asColorSpec(),
        brand = themeColorScheme.v500,
        disabled = SushiGrey400.asColorSpec(),
        brandOnlyLight = themeColorScheme.v500,
        accentOrange = SushiOrange500.asColorSpec(),
        accentRed = SushiRed500.asColorSpec(),
        accentGreen = SushiGreen500.asColorSpec(),
        accentBlue = SushiBlue500.asColorSpec(),
        accentPurple = SushiPurple500.asColorSpec(),
        accentYellow = SushiYellow400.asColorSpec(),
        // todox: Fix with actual values, after defaults are merged in View sushi.
        light = SushiWhite.asColorSpec(),
        enable = SushiWhite.asColorSpec(),
        accentPink = SushiWhite.asColorSpec(),
        accentTeal = SushiWhite.asColorSpec(),
        discover = SushiWhite.asColorSpec(),
    ),
    surfaceColorScheme: SushiColorScheme.SurfaceColorScheme = SushiColorScheme.SurfaceColorScheme(
        backgroundPrimary = SushiWhite.asColorSpec(),
        backgroundSecondary = SushiIndigo050.asColorSpec(),
        primary = SushiWhite.asColorSpec(),
        secondary = SushiWhite.asColorSpec(),
        elevated = SushiGrey100.asColorSpec(),
        inverse = SushiBlack.asColorSpec(),
        inset = SushiGrey050.asColorSpec(),
        insetIntense = SushiGrey100.asColorSpec(),
        accentBlue = SushiBlue050.asColorSpec(),
        accentBlueIntense = SushiBlue100.asColorSpec(),
        accentCider = SushiCider050.asColorSpec(),
        accentCiderIntense = SushiCider100.asColorSpec(),
        disabled = SushiGrey500.asColorSpec(),
        accentGreen = SushiGreen050.asColorSpec(),
        accentGreenIntense = SushiGreen100.asColorSpec(),
        accentYellow = SushiYellow050.asColorSpec(),
        accentYellowIntense = SushiYellow100.asColorSpec(),
        accentRed = SushiRed050.asColorSpec(),
        accentRedIntense = SushiRed100.asColorSpec(),
        accentOrange = SushiOrange050.asColorSpec(),
        accentOrangeIntense = SushiOrange100.asColorSpec(),
        accentPurple = SushiPurple050.asColorSpec(),
        accentPurpleIntense = SushiPurple100.asColorSpec(),
        accentBrown = SushiBrown050.asColorSpec(),
        accentBrownIntense = SushiBrown100.asColorSpec(),
        accentPink = SushiPink050.asColorSpec(),
        accentPinkIntense = SushiPink100.asColorSpec(),
        brandOnlylight = themeColorScheme.v500,
        brand = themeColorScheme.v500,
        selection = themeColorScheme.v050,
        success = SushiGreen500.asColorSpec(),
        warning = SushiYellow500.asColorSpec(),
        error = SushiOrange600.asColorSpec(),
        offer = SushiBlue500.asColorSpec(),
        shimmer = SushiGrey100.asColorSpec(),
        // todox: Fix with actual values, after defaults are merged in View sushi.
        backgroundDark = SushiWhite.asColorSpec(),
        default = SushiWhite.asColorSpec(),
        deepened = SushiWhite.asColorSpec(),
        errorDark = SushiWhite.asColorSpec(),
        brandOnlyLight = SushiWhite.asColorSpec(),
        successDark = SushiWhite.asColorSpec(),
        accentGrey = SushiWhite.asColorSpec(),
        accentTangerine = SushiWhite.asColorSpec(),
        discover = SushiWhite.asColorSpec(),
    ),
    borderColorScheme: SushiColorScheme.BorderColorScheme = SushiColorScheme.BorderColorScheme(
        subtle = SushiGrey100.asColorSpec(),
        moderate = SushiGrey200.asColorSpec(),
        intense = SushiGrey200.asColorSpec(),
        inverse = SushiSlate600.asColorSpec(),
        selection = themeColorScheme.v500,
        brand = themeColorScheme.v500,
        success = SushiGreen500.asColorSpec(),
        warning = SushiYellow500.asColorSpec(),
        error = SushiOrange600.asColorSpec(),
        accentRed = SushiRed100.asColorSpec(),
        accentRedIntense = SushiRed200.asColorSpec(),
        accentYellow = SushiYellow100.asColorSpec(),
        accentYellowIntense = SushiYellow200.asColorSpec(),
        accentCider = SushiCider100.asColorSpec(),
        accentCiderIntense = SushiCider200.asColorSpec(),
        accentPurple = SushiPurple100.asColorSpec(),
        accentPurpleIntense = SushiPurple200.asColorSpec(),
        accentGreen = SushiGreen100.asColorSpec(),
        accentGreenIntense = SushiGreen200.asColorSpec(),
        accentOrange = SushiOrange100.asColorSpec(),
        accentOrangeIntense = SushiOrange200.asColorSpec(),
        accentBlue = SushiBlue100.asColorSpec(),
        accentBlueIntense = SushiBlue200.asColorSpec(),
        // todox: Fix with actual values, after defaults are merged in View sushi.
        dark = SushiWhite.asColorSpec(),
    ),
    crystalColorScheme: SushiColorScheme.CrystalColorScheme = SushiColorScheme.CrystalColorScheme(
        ontime = SushiGreen600.asColorSpec(),
        delay = SushiWhite.asColorSpec(),
        rain = SushiIndigo500.asColorSpec(),
        polylineAerialCurved = SushiBlack.asColorSpec(),
    ),
    dishColorScheme: SushiColorScheme.DishColorScheme = SushiColorScheme.DishColorScheme(
        background = SushiYellow050.asColorSpec(),
        border = SushiYellow200.asColorSpec(),
        icon = SushiYellow400.asColorSpec(),
    ),
    resColorScheme: SushiColorScheme.ResColorScheme = SushiColorScheme.ResColorScheme(
        background50 = SushiGreen800.asColorSpec(),
        background45 = SushiGreen700.asColorSpec(),
        background40 = SushiGreen600.asColorSpec(),
        background35 = SushiGreen500.asColorSpec(),
        background30 = SushiYellow400.asColorSpec(),
        background25 = SushiOrange400.asColorSpec(),
        background20 = SushiOrange400.asColorSpec(),
        background15 = SushiOrange400.asColorSpec(),
        background00 = SushiGrey500.asColorSpec(),
        backgroundNew = SushiGreen100.asColorSpec(),
        borderNew = SushiGreen300.asColorSpec(),
        label = SushiWhite.asColorSpec(),
        labelNew = SushiGreen600.asColorSpec(),
    ),
    buttonColorScheme: SushiColorScheme.ButtonColorScheme = SushiColorScheme.ButtonColorScheme(
        primaryBackground = themeColorScheme.v500,
        primaryBackgroundPressed = themeColorScheme.v600,
        backgroundDisabled = SushiGrey400.asColorSpec(),
        primaryLabel = SushiWhite.asColorSpec(),
        primaryLabelPressed = SushiWhite.asColorSpec(),
        primaryLabelDisabled = SushiWhite.asColorSpec(),
        primaryIcon = SushiWhite.asColorSpec(),
        primaryIconPressed = SushiWhite.asColorSpec(),
        primaryIconDisabled = SushiWhite.asColorSpec(),
        secondaryBackground = SushiTransparent.asColorSpec(),    // todox: revert to themeColorScheme.v500 ?,
        secondaryBackgroundPressed = SushiTransparent.asColorSpec(),    // todox: revert to themeColorScheme.v600 ?
        secondaryLabel = themeColorScheme.v500,
        secondaryLabelPressed = themeColorScheme.v500,  // todox: revert to SushiWhite.asColorSpec(),
        secondaryLabelDisabled = SushiGrey400.asColorSpec(), // todox: revert to SushiGrey050.asColorSpec() ?
        secondaryIcon = themeColorScheme.v500,
        secondaryIconPressed = themeColorScheme.v600,
        secondaryIconDisabled = iconColorScheme.disabled,
        ghostBackground = SushiTransparent.asColorSpec(),    // todox: revert to themeColorScheme.v500 ?,
        ghostBackgroundPressed = SushiTransparent.asColorSpec(),   // todox: revert to themeColorScheme.v600,
        ghostLabel = themeColorScheme.v600, //  todox: revert to SushiGrey400 ?,
        ghostLabelPressed = themeColorScheme.v400, // todox: revert to themeColorScheme.accentColor ?,
        ghostLabelDisabled = SushiGrey400.asColorSpec(),   // todox: revert to themeColorScheme.v600 ?,
        ghostIcon = themeColorScheme.v500,
        ghostIconPressed = themeColorScheme.v600,
        ghostIconDisabled = textColorScheme.disabled,
        secondaryBorder = themeColorScheme.v500,
        secondaryBorderPressed = themeColorScheme.v500,
        secondaryBorderDisabled = iconColorScheme.disabled,
        // todox: Fix with actual values, after defaults are merged in View sushi.
        tertiaryBackground = SushiWhite.asColorSpec(),
        tertiaryBackgroundPressed = SushiWhite.asColorSpec(),
        tertiaryLabel = SushiWhite.asColorSpec(),
        tertiaryLabelPressed = SushiWhite.asColorSpec(),
        tertiaryLabelDisabled = SushiWhite.asColorSpec(),
        tertiaryIcon = SushiWhite.asColorSpec(),
        tertiaryIconPressed = SushiWhite.asColorSpec(),
        tertiaryIconDisabled = SushiWhite.asColorSpec(),
        tertiaryStroke = SushiWhite.asColorSpec(),
        tertiaryStrokePressed = SushiWhite.asColorSpec(),
        tertiaryStrokeDisabled = SushiWhite.asColorSpec(),
    ),
    stepperColorScheme: SushiColorScheme.StepperColorScheme = SushiColorScheme.StepperColorScheme(
        primaryBackground = themeColorScheme.v500,
        primaryBackgroundDisabled = SushiGrey400.asColorSpec(),
        primaryIcon = SushiWhite.asColorSpec(),
        primaryIconDisabled = SushiWhite.asColorSpec(),
        primaryLabel = SushiWhite.asColorSpec(),
        primaryLabelDisabled = SushiWhite.asColorSpec(),
        primaryLabelCustomisable = textColorScheme.quaternary,
        secondaryBackground = themeColorScheme.v050,
        secondaryBackgroundDisabled = SushiGrey100.asColorSpec(),
        secondaryIcon = themeColorScheme.v500,
        secondaryIconDisabled = SushiGrey400.asColorSpec(),
        secondaryLabelNumber = textColorScheme.primary,
        secondaryLabel = themeColorScheme.v500,
        secondaryLabelDisabled = SushiGrey400.asColorSpec(),
        secondaryLabelCustomisable = textColorScheme.quaternary,
        secondaryBorder = themeColorScheme.v500,
        secondaryBorderDisabled = SushiGrey400.asColorSpec(),
    ),
    shimmerColorScheme: SushiColorScheme.ShimmerColorScheme = SushiColorScheme.ShimmerColorScheme(
        // todox: Fix with actual values, after defaults are merged in View sushi.
        start = SushiWhite.asColorSpec(),
        end = SushiWhite.asColorSpec(),
    ),
    sliderColorScheme: SushiColorScheme.SliderColorScheme = SushiColorScheme.SliderColorScheme(
        // todox: Fix with actual values, after defaults are merged in View sushi.
        background = SushiWhite.asColorSpec(),
        backgroundPressed = SushiWhite.asColorSpec(),
        backgroundDisabled = SushiWhite.asColorSpec(),
        label = SushiWhite.asColorSpec(),
        labelPressed = SushiWhite.asColorSpec(),
        labelDisabled = SushiWhite.asColorSpec(),
        labelComplete = SushiWhite.asColorSpec(),
        icon = SushiWhite.asColorSpec(),
        iconPressed = SushiWhite.asColorSpec(),
        iconDisabled = SushiWhite.asColorSpec(),
    ),
    filterColorScheme: SushiColorScheme.FilterColorScheme = SushiColorScheme.FilterColorScheme(
        // todox: Fix with actual values, after defaults are merged in View sushi.
        backgroundSuccess = SushiWhite.asColorSpec(),
        stroke = SushiWhite.asColorSpec(),
        strokeSuccess = SushiWhite.asColorSpec(),
        strokeDisabled = SushiWhite.asColorSpec(),
        label = SushiWhite.asColorSpec(),
        labelDisabled = SushiWhite.asColorSpec(),
        icon = SushiWhite.asColorSpec(),
        iconDisabled = SushiWhite.asColorSpec(),
    ),
): SushiColorScheme =
    SushiColorScheme(
        schemeType = SushiColorSchemeType.Light,
        material = materialColorScheme,
        grey = grey,
        red = red,
        green = green,
        blue = blue,
        yellow = yellow,
        purple = purple,
        indigo = indigo,
        brown = brown,
        cider = cider,
        teal = teal,
        orange = orange,
        pink = pink,
        lime = lime,
        corn = corn,
        avacado = avacado,
        gold = gold,
        onion = onion,
        charcoal = charcoal,
        honey = honey,
        tangerine = tangerine,
        slate = slate,
        rating = rating,
        theme = themeColorScheme,
        text = textColorScheme,
        icon = iconColorScheme,
        surface = surfaceColorScheme,
        border = borderColorScheme,
        crystal = crystalColorScheme,
        dish = dishColorScheme,
        res = resColorScheme,
        button = buttonColorScheme,
        stepper = stepperColorScheme,
        shimmer = shimmerColorScheme,
        slider = sliderColorScheme,
        filter = filterColorScheme
    )