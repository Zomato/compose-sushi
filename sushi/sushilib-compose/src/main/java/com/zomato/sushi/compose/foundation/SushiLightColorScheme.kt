package com.zomato.sushi.compose.foundation

import androidx.compose.material3.ColorScheme
import androidx.compose.material3.lightColorScheme
import com.zomato.sushi.compose.atoms.color.asColorSpec

/**
 * @author gupta.anirudh@zomato.com
 */
fun sushiLightColorScheme(
    materialColorScheme: ColorScheme = lightColorScheme(),
    themeColorScheme: SushiColorScheme.ThemeColorScheme = SushiColorScheme.ThemeColorScheme(
        v050 = SushiRawColorTokens.Red050.asColorSpec(),
        v100 = SushiRawColorTokens.Red100.asColorSpec(),
        v200 = SushiRawColorTokens.Red200.asColorSpec(),
        v300 = SushiRawColorTokens.Red300.asColorSpec(),
        v400 = SushiRawColorTokens.Red400.asColorSpec(),
        v500 = SushiRawColorTokens.Red500.asColorSpec(),
        v600 = SushiRawColorTokens.Red600.asColorSpec(),
        v700 = SushiRawColorTokens.Red700.asColorSpec(),
        v800 = SushiRawColorTokens.Red800.asColorSpec(),
        v900 = SushiRawColorTokens.Red900.asColorSpec(),
        accentColor = SushiRawColorTokens.Red500.asColorSpec(),
    ),
    baseColorScheme: SushiColorScheme.BaseColorScheme = SushiColorScheme.BaseColorScheme(),
    grey: SushiColorScheme.GreyColorScheme = SushiColorScheme.GreyColorScheme(),
    red: SushiColorScheme.RedColorScheme = SushiColorScheme.RedColorScheme(),
    green: SushiColorScheme.GreenColorScheme = SushiColorScheme.GreenColorScheme(),
    blue: SushiColorScheme.BlueColorScheme = SushiColorScheme.BlueColorScheme(),
    yellow: SushiColorScheme.YellowColorScheme = SushiColorScheme.YellowColorScheme(),
    purple: SushiColorScheme.PurpleColorScheme = SushiColorScheme.PurpleColorScheme(),
    indigo: SushiColorScheme.IndigoColorScheme = SushiColorScheme.IndigoColorScheme(),
    brown: SushiColorScheme.BrownColorScheme = SushiColorScheme.BrownColorScheme(),
    cider: SushiColorScheme.CiderColorScheme = SushiColorScheme.CiderColorScheme(),
    teal: SushiColorScheme.TealColorScheme = SushiColorScheme.TealColorScheme(),
    orange: SushiColorScheme.OrangeColorScheme = SushiColorScheme.OrangeColorScheme(),
    pink: SushiColorScheme.PinkColorScheme = SushiColorScheme.PinkColorScheme(),
    lime: SushiColorScheme.LimeColorScheme = SushiColorScheme.LimeColorScheme(),
    corn: SushiColorScheme.CornColorScheme = SushiColorScheme.CornColorScheme(),
    avacado: SushiColorScheme.AvacadoColorScheme = SushiColorScheme.AvacadoColorScheme(),
    gold: SushiColorScheme.GoldColorScheme = SushiColorScheme.GoldColorScheme(),
    onion: SushiColorScheme.OnionColorScheme = SushiColorScheme.OnionColorScheme(),
    charcoal: SushiColorScheme.CharcoalColorScheme = SushiColorScheme.CharcoalColorScheme(),
    honey: SushiColorScheme.HoneyColorScheme = SushiColorScheme.HoneyColorScheme(),
    tangerine: SushiColorScheme.TangerineColorScheme = SushiColorScheme.TangerineColorScheme(),
    slate: SushiColorScheme.SlateColorScheme = SushiColorScheme.SlateColorScheme(),
    rating: SushiColorScheme.RatingColorScheme = SushiColorScheme.RatingColorScheme(),
    textColorScheme: SushiColorScheme.TextColorScheme = SushiColorScheme.TextColorScheme(
        default = SushiRawColorTokens.Black.asColorSpec(),
        primary = SushiRawColorTokens.Grey900.asColorSpec(),
        secondary = SushiRawColorTokens.Grey700.asColorSpec(),
        tertiary = SushiRawColorTokens.Grey600.asColorSpec(),
        quaternary = SushiRawColorTokens.Grey500.asColorSpec(),
        disabled = SushiRawColorTokens.Grey400.asColorSpec(),
        inverse = SushiRawColorTokens.White.asColorSpec(),
        brand = themeColorScheme.v500,
        brandOnlyLight = themeColorScheme.v500,  // textBrand
        offer = SushiRawColorTokens.Blue500.asColorSpec(),
        success = SushiRawColorTokens.Green500.asColorSpec(),
        warning = SushiRawColorTokens.Yellow500.asColorSpec(),
        error = SushiRawColorTokens.Orange600.asColorSpec(),
        accentRed = SushiRawColorTokens.Red500.asColorSpec(),
        accentRedIntense = SushiRawColorTokens.Red700.asColorSpec(),
        accentOrange = SushiRawColorTokens.Orange500.asColorSpec(),
        accentOrangeIntense = SushiRawColorTokens.Orange800.asColorSpec(),
        accentGreen = SushiRawColorTokens.Green500.asColorSpec(),
        accentGreenIntense = SushiRawColorTokens.Green800.asColorSpec(),
        accentBlue = SushiRawColorTokens.Blue500.asColorSpec(),
        accentBlueIntense = SushiRawColorTokens.Blue800.asColorSpec(),
        accentPurple = SushiRawColorTokens.Purple500.asColorSpec(),
        accentPurpleIntense = SushiRawColorTokens.Purple800.asColorSpec(),
        accentYellow = SushiRawColorTokens.Yellow600.asColorSpec(),
        accentYellowIntense = SushiRawColorTokens.Yellow800.asColorSpec(),
        accentTeal = SushiRawColorTokens.Teal500.asColorSpec(),
        accentTealIntense = SushiRawColorTokens.Teal700.asColorSpec(),
        accentCider = SushiRawColorTokens.Cider500.asColorSpec(),
        accentCiderIntense = SushiRawColorTokens.Cider700.asColorSpec(),
        accentBrown = SushiRawColorTokens.Brown500.asColorSpec(),
        accentBrownIntense = SushiRawColorTokens.Brown700.asColorSpec(),
        // ctodo: Fix with actual values, after defaults are merged in View sushi.
        light = SushiRawColorTokens.White.asColorSpec(),
        accentPink = SushiRawColorTokens.White.asColorSpec(),
        discover = SushiRawColorTokens.White.asColorSpec(),
        accentHoney = SushiRawColorTokens.Honey600.asColorSpec(),
    ),
    iconColorScheme: SushiColorScheme.IconColorScheme = SushiColorScheme.IconColorScheme(
        default = SushiRawColorTokens.Black.asColorSpec(),
        primary = SushiRawColorTokens.Grey900.asColorSpec(),
        secondary = SushiRawColorTokens.Grey700.asColorSpec(),
        tertiary = SushiRawColorTokens.Grey600.asColorSpec(),
        quaternary = SushiRawColorTokens.Grey500.asColorSpec(),
        offer = SushiRawColorTokens.Blue500.asColorSpec(),
        warning = SushiRawColorTokens.Yellow500.asColorSpec(),
        error = SushiRawColorTokens.Orange600.asColorSpec(),
        success = SushiRawColorTokens.Green500.asColorSpec(),
        inverse = SushiRawColorTokens.White.asColorSpec(),
        brand = themeColorScheme.v500,
        disabled = SushiRawColorTokens.Grey400.asColorSpec(),
        brandOnlyLight = themeColorScheme.v500,
        accentOrange = SushiRawColorTokens.Orange500.asColorSpec(),
        accentRed = SushiRawColorTokens.Red500.asColorSpec(),
        accentGreen = SushiRawColorTokens.Green500.asColorSpec(),
        accentBlue = SushiRawColorTokens.Blue500.asColorSpec(),
        accentPurple = SushiRawColorTokens.Purple500.asColorSpec(),
        accentYellow = SushiRawColorTokens.Yellow400.asColorSpec(),
        // ctodo: Fix with actual values, after defaults are merged in View sushi.
        light = SushiRawColorTokens.White.asColorSpec(),
        enable = SushiRawColorTokens.White.asColorSpec(),
        accentPink = SushiRawColorTokens.White.asColorSpec(),
        accentTeal = SushiRawColorTokens.White.asColorSpec(),
        discover = SushiRawColorTokens.White.asColorSpec(),
    ),
    surfaceColorScheme: SushiColorScheme.SurfaceColorScheme = SushiColorScheme.SurfaceColorScheme(
        backgroundPrimary = SushiRawColorTokens.White.asColorSpec(),
        backgroundSecondary = SushiRawColorTokens.Indigo050.asColorSpec(),
        primary = SushiRawColorTokens.White.asColorSpec(),
        secondary = SushiRawColorTokens.White.asColorSpec(),
        elevated = SushiRawColorTokens.Grey100.asColorSpec(),
        inverse = SushiRawColorTokens.Black.asColorSpec(),
        inset = SushiRawColorTokens.Grey050.asColorSpec(),
        insetIntense = SushiRawColorTokens.Grey100.asColorSpec(),
        accentBlue = SushiRawColorTokens.Blue050.asColorSpec(),
        accentBlueIntense = SushiRawColorTokens.Blue100.asColorSpec(),
        accentCider = SushiRawColorTokens.Cider050.asColorSpec(),
        accentCiderIntense = SushiRawColorTokens.Cider100.asColorSpec(),
        disabled = SushiRawColorTokens.Grey500.asColorSpec(),
        accentGreen = SushiRawColorTokens.Green050.asColorSpec(),
        accentGreenIntense = SushiRawColorTokens.Green100.asColorSpec(),
        accentYellow = SushiRawColorTokens.Yellow050.asColorSpec(),
        accentYellowIntense = SushiRawColorTokens.Yellow100.asColorSpec(),
        accentRed = SushiRawColorTokens.Red050.asColorSpec(),
        accentRedIntense = SushiRawColorTokens.Red100.asColorSpec(),
        accentOrange = SushiRawColorTokens.Orange050.asColorSpec(),
        accentOrangeIntense = SushiRawColorTokens.Orange100.asColorSpec(),
        accentPurple = SushiRawColorTokens.Purple050.asColorSpec(),
        accentPurpleIntense = SushiRawColorTokens.Purple100.asColorSpec(),
        accentBrown = SushiRawColorTokens.Brown050.asColorSpec(),
        accentBrownIntense = SushiRawColorTokens.Brown100.asColorSpec(),
        accentPink = SushiRawColorTokens.Pink050.asColorSpec(),
        accentPinkIntense = SushiRawColorTokens.Pink100.asColorSpec(),
        brandOnlylight = themeColorScheme.v500,
        brand = themeColorScheme.v500,
        selection = themeColorScheme.v050,
        success = SushiRawColorTokens.Green500.asColorSpec(),
        warning = SushiRawColorTokens.Yellow500.asColorSpec(),
        error = SushiRawColorTokens.Orange600.asColorSpec(),
        offer = SushiRawColorTokens.Blue500.asColorSpec(),
        shimmer = SushiRawColorTokens.Grey100.asColorSpec(),
        // ctodo: Fix with actual values, after defaults are merged in View sushi.
        backgroundDark = SushiRawColorTokens.White.asColorSpec(),
        default = SushiRawColorTokens.White.asColorSpec(),
        deepened = SushiRawColorTokens.White.asColorSpec(),
        errorDark = SushiRawColorTokens.White.asColorSpec(),
        brandOnlyLight = SushiRawColorTokens.White.asColorSpec(),
        successDark = SushiRawColorTokens.White.asColorSpec(),
        accentGrey = SushiRawColorTokens.White.asColorSpec(),
        accentTangerine = SushiRawColorTokens.White.asColorSpec(),
        discover = SushiRawColorTokens.White.asColorSpec(),
        tertiary = SushiRawColorTokens.Charcoal100.asColorSpec(),
        quaternary = SushiRawColorTokens.Charcoal200.asColorSpec(),
        accentBlueOnly = SushiRawColorTokens.Blue900.asColorSpec(),
        accentBlueInverse = SushiRawColorTokens.Blue800.asColorSpec(),
        accentGreyInverse = SushiRawColorTokens.Charcoal800.asColorSpec(),
        accentTangerineIntense = SushiRawColorTokens.Tangerine200.asColorSpec(),
        accentTangerineInverse = SushiRawColorTokens.Tangerine900.asColorSpec(),
        accentIndigo = SushiRawColorTokens.Indigo100.asColorSpec(),
        accentIndigoIntense = SushiRawColorTokens.Indigo200.asColorSpec(),
        accentIndigoInverse = SushiRawColorTokens.Indigo900.asColorSpec(),
        darkIntense = SushiRawColorTokens.Black.asColorSpec(),
        accentTeal = SushiRawColorTokens.Teal100.asColorSpec(),
    ),
    borderColorScheme: SushiColorScheme.BorderColorScheme = SushiColorScheme.BorderColorScheme(
        subtle = SushiRawColorTokens.Grey100.asColorSpec(),
        moderate = SushiRawColorTokens.Grey200.asColorSpec(),
        intense = SushiRawColorTokens.Grey200.asColorSpec(),
        inverse = SushiRawColorTokens.Slate600.asColorSpec(),
        selection = themeColorScheme.v500,
        brand = themeColorScheme.v500,
        success = SushiRawColorTokens.Green500.asColorSpec(),
        warning = SushiRawColorTokens.Yellow500.asColorSpec(),
        error = SushiRawColorTokens.Orange600.asColorSpec(),
        accentRed = SushiRawColorTokens.Red100.asColorSpec(),
        accentRedIntense = SushiRawColorTokens.Red200.asColorSpec(),
        accentYellow = SushiRawColorTokens.Yellow100.asColorSpec(),
        accentYellowIntense = SushiRawColorTokens.Yellow200.asColorSpec(),
        accentCider = SushiRawColorTokens.Cider100.asColorSpec(),
        accentCiderIntense = SushiRawColorTokens.Cider200.asColorSpec(),
        accentPurple = SushiRawColorTokens.Purple100.asColorSpec(),
        accentPink = SushiRawColorTokens.Pink100.asColorSpec(),
        accentPurpleIntense = SushiRawColorTokens.Purple200.asColorSpec(),
        accentGreen = SushiRawColorTokens.Green100.asColorSpec(),
        accentGreenIntense = SushiRawColorTokens.Green200.asColorSpec(),
        accentOrange = SushiRawColorTokens.Orange100.asColorSpec(),
        accentOrangeIntense = SushiRawColorTokens.Orange200.asColorSpec(),
        accentBlue = SushiRawColorTokens.Blue100.asColorSpec(),
        accentBlueIntense = SushiRawColorTokens.Blue200.asColorSpec(),
        // ctodo: Fix with actual values, after defaults are merged in View sushi.
        dark = SushiRawColorTokens.White.asColorSpec(),
        accentWhite = SushiRawColorTokens.White.asColorSpec(),
        accentHoney = SushiRawColorTokens.Honey600.asColorSpec(),
    ),
    crystalColorScheme: SushiColorScheme.CrystalColorScheme = SushiColorScheme.CrystalColorScheme(
        ontime = SushiRawColorTokens.Green600.asColorSpec(),
        delay = SushiRawColorTokens.White.asColorSpec(),
        rain = SushiRawColorTokens.Indigo500.asColorSpec(),
        polylineAerialCurved = SushiRawColorTokens.Black.asColorSpec(),
    ),
    dishColorScheme: SushiColorScheme.DishColorScheme = SushiColorScheme.DishColorScheme(
        background = SushiRawColorTokens.Yellow050.asColorSpec(),
        border = SushiRawColorTokens.Yellow200.asColorSpec(),
        icon = SushiRawColorTokens.Yellow400.asColorSpec(),
    ),
    resColorScheme: SushiColorScheme.ResColorScheme = SushiColorScheme.ResColorScheme(
        background50 = SushiRawColorTokens.Green800.asColorSpec(),
        background45 = SushiRawColorTokens.Green700.asColorSpec(),
        background40 = SushiRawColorTokens.Green600.asColorSpec(),
        background35 = SushiRawColorTokens.Green500.asColorSpec(),
        background30 = SushiRawColorTokens.Yellow400.asColorSpec(),
        background25 = SushiRawColorTokens.Orange400.asColorSpec(),
        background20 = SushiRawColorTokens.Orange400.asColorSpec(),
        background15 = SushiRawColorTokens.Orange400.asColorSpec(),
        background00 = SushiRawColorTokens.Grey500.asColorSpec(),
        backgroundNew = SushiRawColorTokens.Green100.asColorSpec(),
        borderNew = SushiRawColorTokens.Green300.asColorSpec(),
        label = SushiRawColorTokens.White.asColorSpec(),
        labelNew = SushiRawColorTokens.Green600.asColorSpec(),
    ),
    buttonColorScheme: SushiColorScheme.ButtonColorScheme = SushiColorScheme.ButtonColorScheme(
        primaryBackground = themeColorScheme.v500,
        primaryBackgroundPressed = themeColorScheme.v600,
        backgroundDisabled = SushiRawColorTokens.Grey400.asColorSpec(),
        primaryLabel = SushiRawColorTokens.White.asColorSpec(),
        primaryLabelPressed = SushiRawColorTokens.White.asColorSpec(),
        primaryLabelDisabled = SushiRawColorTokens.White.asColorSpec(),
        primaryIcon = SushiRawColorTokens.White.asColorSpec(),
        primaryIconPressed = SushiRawColorTokens.White.asColorSpec(),
        primaryIconDisabled = SushiRawColorTokens.White.asColorSpec(),
        secondaryBackground = SushiRawColorTokens.Transparent.asColorSpec(),    // ctodo: revert to themeColorScheme.v500 ?,
        secondaryBackgroundPressed = SushiRawColorTokens.Transparent.asColorSpec(),    // ctodo: revert to themeColorScheme.v600 ?
        secondaryLabel = themeColorScheme.v500,
        secondaryLabelPressed = themeColorScheme.v500,  // ctodo: revert to SushiWhite.asColorSpec(),
        secondaryLabelDisabled = SushiRawColorTokens.Grey400.asColorSpec(), // ctodo: revert to SushiGrey050.asColorSpec() ?
        secondaryIcon = themeColorScheme.v500,
        secondaryIconPressed = themeColorScheme.v600,
        secondaryIconDisabled = iconColorScheme.disabled,
        ghostBackground = SushiRawColorTokens.Transparent.asColorSpec(),    // ctodo: revert to themeColorScheme.v500 ?,
        ghostBackgroundPressed = SushiRawColorTokens.Transparent.asColorSpec(),   // ctodo: revert to themeColorScheme.v600,
        ghostLabel = themeColorScheme.v600, //  ctodo: revert to SushiGrey400 ?,
        ghostLabelPressed = themeColorScheme.v400, // ctodo: revert to themeColorScheme.accentColor ?,
        ghostLabelDisabled = SushiRawColorTokens.Grey400.asColorSpec(),   // ctodo: revert to themeColorScheme.v600 ?,
        ghostIcon = themeColorScheme.v500,
        ghostIconPressed = themeColorScheme.v600,
        ghostIconDisabled = textColorScheme.disabled,
        secondaryBorder = themeColorScheme.v500,
        secondaryBorderPressed = themeColorScheme.v500,
        secondaryBorderDisabled = iconColorScheme.disabled,
        // ctodo: Fix with actual values, after defaults are merged in View sushi.
        tertiaryBackground = SushiRawColorTokens.White.asColorSpec(),
        tertiaryBackgroundPressed = SushiRawColorTokens.White.asColorSpec(),
        tertiaryLabel = SushiRawColorTokens.White.asColorSpec(),
        tertiaryLabelPressed = SushiRawColorTokens.White.asColorSpec(),
        tertiaryLabelDisabled = SushiRawColorTokens.White.asColorSpec(),
        tertiaryIcon = SushiRawColorTokens.White.asColorSpec(),
        tertiaryIconPressed = SushiRawColorTokens.White.asColorSpec(),
        tertiaryIconDisabled = SushiRawColorTokens.White.asColorSpec(),
        tertiaryStroke = SushiRawColorTokens.White.asColorSpec(),
        tertiaryStrokePressed = SushiRawColorTokens.White.asColorSpec(),
        tertiaryStrokeDisabled = SushiRawColorTokens.White.asColorSpec(),
    ),
    stepperColorScheme: SushiColorScheme.StepperColorScheme = SushiColorScheme.StepperColorScheme(
        primaryBackground = themeColorScheme.v500,
        primaryBackgroundDisabled = SushiRawColorTokens.Grey400.asColorSpec(),
        primaryIcon = SushiRawColorTokens.White.asColorSpec(),
        primaryIconDisabled = SushiRawColorTokens.White.asColorSpec(),
        primaryLabel = SushiRawColorTokens.White.asColorSpec(),
        primaryLabelDisabled = SushiRawColorTokens.White.asColorSpec(),
        primaryLabelCustomisable = textColorScheme.quaternary,
        secondaryBackground = themeColorScheme.v050,
        secondaryBackgroundDisabled = SushiRawColorTokens.Grey100.asColorSpec(),
        secondaryIcon = themeColorScheme.v500,
        secondaryIconDisabled = SushiRawColorTokens.Grey400.asColorSpec(),
        secondaryLabelNumber = textColorScheme.primary,
        secondaryLabel = themeColorScheme.v500,
        secondaryLabelDisabled = SushiRawColorTokens.Grey400.asColorSpec(),
        secondaryLabelCustomisable = textColorScheme.quaternary,
        secondaryBorder = themeColorScheme.v500,
        secondaryBorderDisabled = SushiRawColorTokens.Grey400.asColorSpec(),
    ),
    shimmerColorScheme: SushiColorScheme.ShimmerColorScheme = SushiColorScheme.ShimmerColorScheme(
        // ctodo: Fix with actual values, after defaults are merged in View sushi.
        start = SushiRawColorTokens.White.asColorSpec(),
        end = SushiRawColorTokens.White.asColorSpec(),
    ),
    sliderColorScheme: SushiColorScheme.SliderColorScheme = SushiColorScheme.SliderColorScheme(
        // ctodo: Fix with actual values, after defaults are merged in View sushi.
        background = SushiRawColorTokens.White.asColorSpec(),
        backgroundPressed = SushiRawColorTokens.White.asColorSpec(),
        backgroundDisabled = SushiRawColorTokens.White.asColorSpec(),
        label = SushiRawColorTokens.White.asColorSpec(),
        labelPressed = SushiRawColorTokens.White.asColorSpec(),
        labelDisabled = SushiRawColorTokens.White.asColorSpec(),
        labelComplete = SushiRawColorTokens.White.asColorSpec(),
        icon = SushiRawColorTokens.White.asColorSpec(),
        iconPressed = SushiRawColorTokens.White.asColorSpec(),
        iconDisabled = SushiRawColorTokens.White.asColorSpec(),
    ),
    filterColorScheme: SushiColorScheme.FilterColorScheme = SushiColorScheme.FilterColorScheme(
        // ctodo: Fix with actual values, after defaults are merged in View sushi.
        backgroundSuccess = SushiRawColorTokens.White.asColorSpec(),
        stroke = SushiRawColorTokens.White.asColorSpec(),
        strokeSuccess = SushiRawColorTokens.White.asColorSpec(),
        strokeDisabled = SushiRawColorTokens.White.asColorSpec(),
        label = SushiRawColorTokens.White.asColorSpec(),
        labelDisabled = SushiRawColorTokens.White.asColorSpec(),
        icon = SushiRawColorTokens.White.asColorSpec(),
        iconDisabled = SushiRawColorTokens.White.asColorSpec(),
    ),
    aeroBarColorScheme: SushiColorScheme.AerobarColorScheme = SushiColorScheme.AerobarColorScheme(
        default = SushiRawColorTokens.Charcoal900.asColorSpec(),
        success = SushiRawColorTokens.Green600.asColorSpec(),
        error = SushiRawColorTokens.Tangerine600.asColorSpec(),
        warning = SushiRawColorTokens.Honey300.asColorSpec(),
        discover = SushiRawColorTokens.White.asColorSpec(),
        accentDefault = SushiRawColorTokens.Charcoal050.asColorSpec(),
        accentSuccess = SushiRawColorTokens.Green100.asColorSpec(),
        accentWarning = SushiRawColorTokens.Honey100.asColorSpec(),
        accentError = SushiRawColorTokens.Tangerine100.asColorSpec(),
        accentDiscover = SushiRawColorTokens.Blue100.asColorSpec(),
    ),
    tagColorScheme: SushiColorScheme.TagColorScheme = SushiColorScheme.TagColorScheme(
        primaryBlack = SushiRawColorTokens.Black.asColorSpec(),
        primaryGrey = SushiRawColorTokens.Charcoal700.asColorSpec(),
        primaryGreen = SushiRawColorTokens.Green600.asColorSpec(),
        primaryPurple = SushiRawColorTokens.Purple600.asColorSpec(),
        primaryTeal = SushiRawColorTokens.Teal600.asColorSpec(),
        primaryPink = SushiRawColorTokens.Pink700.asColorSpec(),
        primaryYellow = SushiRawColorTokens.Honey300.asColorSpec(),
        primaryOrange = SushiRawColorTokens.Tangerine600.asColorSpec(),
        primaryBlue = SushiRawColorTokens.Blue600.asColorSpec(),
        secondaryGrey = SushiRawColorTokens.Charcoal100.asColorSpec(),
        secondaryGreen = SushiRawColorTokens.Green100.asColorSpec(),
        secondaryPurple = SushiRawColorTokens.Purple100.asColorSpec(),
        secondaryTeal = SushiRawColorTokens.Teal100.asColorSpec(),
        secondaryPink = SushiRawColorTokens.Pink100.asColorSpec(),
        secondaryYellow = SushiRawColorTokens.Honey050.asColorSpec(),
        secondaryOrange = SushiRawColorTokens.Orange100.asColorSpec(),
        secondaryBlue = SushiRawColorTokens.Blue050.asColorSpec(),
    )
): SushiColorScheme =
    SushiColorScheme(
        schemeType = SushiColorSchemeType.Light,
        material = materialColorScheme,
        grey = grey,
        red = red,
        green = green,
        blue = blue,
        yellow = yellow,
        purple = purple,
        indigo = indigo,
        brown = brown,
        cider = cider,
        teal = teal,
        orange = orange,
        pink = pink,
        lime = lime,
        corn = corn,
        avacado = avacado,
        gold = gold,
        onion = onion,
        charcoal = charcoal,
        honey = honey,
        tangerine = tangerine,
        slate = slate,
        rating = rating,
        theme = themeColorScheme,
        base = baseColorScheme,
        text = textColorScheme,
        icon = iconColorScheme,
        surface = surfaceColorScheme,
        border = borderColorScheme,
        crystal = crystalColorScheme,
        dish = dishColorScheme,
        res = resColorScheme,
        button = buttonColorScheme,
        stepper = stepperColorScheme,
        shimmer = shimmerColorScheme,
        slider = sliderColorScheme,
        filter = filterColorScheme,
        aerobar = aeroBarColorScheme,
        tag = tagColorScheme,
    )